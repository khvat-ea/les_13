---
# tasks file for createVM_builder
- name: create a disk
  gcp_compute_disk:
    name: "{{ instance_name }}"
    size_gb: "{{ size_HDD_gb }}"
    source_image: "{{ image_OS }}"
    zone: "{{ region }}-{{ zone }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: disk

- name: create a network
  gcp_compute_network:
    name: default
    auto_create_subnetworks: 'true'
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: network

- name: create a address
  gcp_compute_address:
    name: "{{ instance_name }}"
    region: "{{ region }}"
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present
  register: address

- name: create a instance
  gcp_compute_instance:
    name: "{{ instance_name }}"
    machine_type: "{{ machine_type }}"
    # Use disk from source
    disks:
    - auto_delete: 'true'
      boot: 'true'
      source: "{{ disk }}"
    # Include public key metadata on the instance
    metadata:
      ssh-keys: |-
        "{{ public_key_devopsPC }}"
        "{{ public_key_ansibleMaster }}"     
    # Set label
    labels:
      environment: "{{ instance_name }}"
    # Use network with static external IP
    network_interfaces:
    - network: "{{ network }}"
      access_configs:
      - name: External NAT
        nat_ip: "{{ address }}"
        type: ONE_TO_ONE_NAT
    # Set the region and zone of the VM location
    zone: "{{ region }}-{{ zone }}"
    # Credential for successfull access
    project: "{{ gcp_project }}"
    auth_kind: "{{ gcp_cred_kind }}"
    service_account_file: "{{ gcp_cred_file }}"
    state: present